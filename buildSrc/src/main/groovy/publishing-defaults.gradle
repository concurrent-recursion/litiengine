plugins {
  id "maven-publish"
  id "signing"
}

java {
  withSourcesJar()
  withJavadocJar()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = gurkenlabs_group
      artifactId = LITIENGINE_artifact
      version = project.version
      from components.java
      pom {
        name.set(LITIENGINE_name)
        description.set(LITIENGINE_description)
        inceptionYear.set(LITIENGINE_inception)
        url.set(LITIENGINE_url)
        licenses {
          license {
            name.set(MIT_name)
            url.set(MIT_url)
          }
        }
        developers {
          developer {
            id.set(steffen_id)
            name.set(steffen_name)
            email.set(steffen_mail)
          }
          developer {
            id.set(matthias_id)
            name.set(matthias_name)
            email.set(matthias_mail)
          }
        }
        scm {
          connection.set(LITIENGINE_scm_con)
          developerConnection.set(LITIENGINE_scm_devCon)
          url.set(LITIENGINE_scm_url)
        }
      }
    }
  }
}

signing {
  if (project.hasProperty("signingKey")) {
    useInMemoryPgpKeys(findProperty("signingKey"), findProperty("signingPassword"))
  } else {
    useGpgCmd()
  }
  sign(publishing.publications.mavenJava)
}
